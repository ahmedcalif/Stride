@model Stride.ViewModels.GoalViewModel
@{
    ViewData["Title"] = "Add Goals";
    if (ViewData["IsVirtualDomRequest"] as bool? == true)
    {
      Layout = null;
    } else {
      Layout = "_Layout";
    }
}
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Add New Goal</h3>
                </div>
                
                <div class="card-body">
                    <form asp-action="Create" asp-controller="Goals" method="post" id="createGoalForm">
                        @Html.AntiForgeryToken()
                        
                        <partial name="_GoalForm" model="Model" />
                        
                        <div class="d-flex justify-content-end gap-2">
                            <a href="/Goals" class="btn btn-secondary spa-link">Cancel</a>
                            <button type="submit" class="btn btn-primary">Add Goal</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
    $(document).ready(function() {
        $("#createGoalForm").submit(function(e) {
            e.preventDefault();
            
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: $(this).serialize(),
                headers: { "X-Requested-With": "XMLHttpRequest" },
                success: function(response) {
                    if ($(response).find('.validation-summary-errors').length > 0 || 
                        $(response).find('.text-danger').length > 0) {
                        $('#apprun-app').html(response);
                    } else {
                        // Navigate to goals list
                        history.pushState(null, "", "/Goals");
                        fetch("/Goals", {
                            headers: { "X-Requested-With": "XMLHttpRequest" }
                        })
                        .then(response => response.text())
                        .then(html => {
                            $('#apprun-app').html(html);
                            
                            // Show success message
                            const alertDiv = $('<div class="alert alert-success alert-dismissible fade show" role="alert">' +
                                'Goal created successfully!' +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                                '</div>');
                            $('#apprun-app').prepend(alertDiv);
                        });
                    }
                },
                error: function() {
                    const alertDiv = $('<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                        'An error occurred while creating the goal.' +
                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                        '</div>');
                    $('#apprun-app').prepend(alertDiv);
                }
            });
        });
    });
    </script>
}