@model Stride.Data.DatabaseModels.Goal

<div class="card h-100">
    <div class="card-body">
        <div class="d-flex justify-content-between mb-3">
            @if (Model.Category != null)
            {
                <span class="badge bg-primary">@Model.Category.name</span>
            }
            else 
            {
                <span class="badge bg-secondary">Uncategorized</span>
            }
            
            <div class="dropdown">
                <button class="btn btn-link text-dark" type="button" data-bs-toggle="dropdown">
                    <i class="fas fa-ellipsis-v"></i>
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@Model.goal_id"><i class="fas fa-edit me-2"></i>Edit</a></li>
                    <li>
                        <form asp-action="Delete" asp-route-id="@Model.goal_id" method="post" onsubmit="return confirm('Are you sure you want to delete this goal?');">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="dropdown-item text-danger"><i class="fas fa-trash me-2"></i>Delete</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
        <h5 class="card-title">@Model.title</h5>
        <p class="card-text text-muted">@Model.description</p>
        <div class="d-flex justify-content-between align-items-center">
            <small class="text-muted">Due: @(Model.end_date.HasValue ? Model.end_date.Value.ToString("MMM dd, yyyy") : "No date")</small>
            <span class="badge @(Model.is_completed ? "bg-success" : "bg-primary")">
                @(Model.is_completed ? "Completed" : "In Progress")
            </span>
        </div>
        @if (Model.Priority != null)
        {
            <div class="mt-2">
                <small class="text-muted">Priority: @Model.Priority.name</small>
            </div>
        }
    </div>
</div>